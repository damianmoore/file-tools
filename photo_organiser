#!/usr/bin/env python
import errno
import os
import shutil
import sys
import time
from subprocess import Popen, PIPE, STDOUT

PHOTO_FILE_EXTS = ['cr2', 'jpeg', 'jpg',]


def run_cmd(cmd):
    p = Popen(cmd.split(' '), stdout=PIPE, stdin=PIPE, stderr=PIPE)
    return p.communicate()[0]

def get_time(path):
    cmd = 'exiftool -dateTimeOriginal %s' % path
    try:
        date_str = run_cmd(cmd).split(' : ')[1].strip()
        return time.strptime(date_str, '%Y:%m:%d %H:%M:%S')
    except IndexError:
        return None

def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc:
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else: raise

def organise_photos(orig, dest, move=False):
    for r,d,f in os.walk(orig):
        for fn in f:
            if os.path.splitext(fn)[1][1:].lower() in PHOTO_FILE_EXTS:
                filepath = os.path.join(r, fn)
                t = get_time(filepath)
                if t:
                    destpath = '%02d/%02d/%02d' % (t.tm_year, t.tm_mon, t.tm_mday)
                    destpath = os.path.join(dest, destpath)
                    mkdir_p(destpath)
                    destpath = os.path.join(destpath, fn)
                    if not os.path.exists(destpath):
                        if move:
                            shutil.move(filepath, destpath)
                        else:
                            shutil.copyfile(filepath, destpath)
                    print '{} -> {}'.format(filepath, destpath)
                else:
                    print 'ERROR READING DATE: {}'.format(filepath)


if __name__ == '__main__':
    orig_dir = os.path.abspath(sys.argv[1])
    dest_dir = os.path.abspath(sys.argv[2])
    organise_photos(orig_dir, dest_dir, move=True)
    
