#!/usr/bin/env python

from collections import defaultdict
from subprocess import Popen, PIPE
import sys


def run_cmd(cmd):
    p = Popen(cmd.split(' '), stdout=PIPE, stdin=PIPE, stderr=PIPE)
    return p.communicate()[0]


def main():
    file1 = sys.argv[1]
    file2 = sys.argv[2]

    paths = {}

    diff_out = run_cmd('diff {} {}'.format(file1, file2))
    for line in diff_out.split('\n'):
        try:
            if line[0] in ['<', '>']:
                parts = line.split()
                direction = parts[0]
                kbytes = parts[1]
                path = parts[2]

                if direction == '<':
                    seg = 0
                elif direction == '>':
                    seg = 1

                if path not in paths:
                    paths[path] = [0,0,0]
                paths[path][seg] = int(kbytes)
        except IndexError:
            pass

    for path, values in paths.items():
        if values[2] == 0:
            values[2] = values[1] - values[0]

    for item in sorted(paths.items(), key=lambda path: path[1][2], reverse=True):
        print '{}K    {}'.format(item[1][2], item[0])


if __name__ == '__main__':
    main()
